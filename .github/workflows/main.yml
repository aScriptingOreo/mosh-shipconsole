name: Release Module

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        
      - name: Get Version
        id: get-version
        run: echo "version=$(echo ${{ github.ref }} | sed 's/refs\/tags\/v//')" >> $GITHUB_OUTPUT
        
      - name: Update Version in module.json
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.version = "${{ steps.get-version.outputs.version }}"' module.json
      
      - name: Create ZIP archive
        run: |
          # Create a directory for the release
          mkdir -p dist
          
          # Copy all necessary files to the release directory
          cp -r scripts styles templates languages module.json README.md LICENSE.md dist/
          
          # Create the zip file
          cd dist
          zip -r ../module.zip *
          cd ..
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.get-version.outputs.version }}
          draft: false
          prerelease: false
          
      - name: Upload module.json
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./module.json
          asset_name: module.json
          asset_content_type: application/json
          
      - name: Upload module.zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./module.zip
          asset_name: module.zip
          asset_content_type: application/zip
